name: Test

on:
  push:
    branches:
  pull_request:
    branches:

env:
  node_version: 14

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [ '7.4', '7.3']
    name: PHP ${{ matrix.php }} Build & Package
    steps:

    - name: Setup PHP ${{ matrix.php }}
      uses: nanasess/setup-php@master
      with:
        php-version: ${{ matrix.php }}

    - name: Use Node.js ${{ env.node_version }}
      uses: actions/setup-node@v2-beta
      with:
        node-version: ${{ env.node_version }}
        # setting a registry enables the NODE_AUTH_TOKEN env variable where we can set an npm token.  REQUIRED
        registry-url: 'https://registry.npmjs.org'

    - name: Checkout ChurchCRM Cdoe
      uses: actions/checkout@v2.3.2
      with:
        # fetch full history so things like auto-changelog work properly
        fetch-depth: 0

    - name: get-npm-version
      uses: martinbeentjes/npm-get-version-action@master
      id: package-version

    - name: Build ${{ steps.package-version.outputs.current-version}} on ${{ matrix.php }}
      run: npm run deploy

    - name: upload info
      uses: actions/upload-artifact@v2
      with:
        name: server-debug.html
        path: info.php

    - name: Setup Cypress and run Tests
      run: |
        wget http://localhost/
        wget http://localhost/api/public/echo
        cp test/Docker-cypress.json cypress.json
        npm run test

    - name: Package files
      run: npm run package

    - name: Upload Zip file
      uses: actions/upload-artifact@v2
      with:
        name: ChurchCRM-${{steps.package-version.outputs.current-version}}-${{ matrix.php }}.zip
        path: target/ChurchCRM-${{steps.package-version.outputs.current-version}}.zip

    - name: Upload Tar file
      uses: actions/upload-artifact@v2
      with:
        name: ChurchCRM-${{steps.package-version.outputs.current-version}}-${{ matrix.php }}.tar.gz
        path: target/ChurchCRM-${{steps.package-version.outputs.current-version}}.tar.gz

  deploy:
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: ChurchCRM-${{steps.package-version.outputs.current-version}}-7.4.tar.gz

      - name: Unzip
        run: tar -xvf ChurchCRM-${{steps.package-version.outputs.current-version}}-7.4.tar.gz

      - uses: akhileshns/heroku-deploy@v3.7.8 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "ChurchCRM CI"
          heroku_email: "george@dawouds.com"
          appdir: churchcrm

  docker:
    name: deploy to demo site
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        run: echo "Nothing yet here"
